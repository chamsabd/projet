{"ast":null,"code":"import _asyncToGenerator from \"D:/safe_dsi21/dsi21/semestre2/PROJET_2/projet/vueJS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nimport ListerInscrit from '../../components/inscrit/ListerInscrit.vue'; //import ArchiverItem from \"@/components/ArchiverItem\";\n\nexport default {\n  name: \"InscritsView\",\n  components: {\n    ListerInscrit: ListerInscrit //  ArchiverItem,\n\n  },\n  data: function data() {\n    return {\n      dismissSecs: 10,\n      dismissCountDown: 0,\n      formations: []\n    };\n  },\n  computed: {},\n  watch: {},\n  mounted: function mounted() {\n    this.getformations();\n  },\n  methods: {\n    getformations: function getformations() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://127.0.0.1:8000/api/inscrits/formations\").then(function (response) {\n                  _this.formations = response.data;\n                }).catch(function (error) {\n                  return console.log(error.response);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    },\n    showAlert: function showAlert() {\n      this.dismissCountDown = this.dismissSecs;\n    },\n    deleteitm: function deleteitm(id) {\n      var _this2 = this;\n\n      axios.delete(\"http://127.0.0.1:8000/api/formation/\" + id).then(function (response) {\n        if (response.data == true) _this2.getformations();\n      }).catch(function (error) {\n        return console.log(error.response);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA,uE,CAEA;;AASA;AACAA,sBADA;AAEAC;AACAC,gCADA,CAEA;;AAFA,GAFA;AASAC;AACA;AAEAC,qBAFA;AAGAC,yBAHA;AAKAC;AALA;AAQA,GAlBA;AAmBAC,cAnBA;AAsBAC,WAtBA;AA0BAC,SA1BA,qBA0BA;AACA;AACA,GA5BA;AA6BAC;AACAC,iBADA,2BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,MACAC,GADA,CACA,+CADA,EAEAC,IAFA,CAEA;AACA;AACA,iBAJA,EAKAC,KALA,CAKA;AAAA;AAAA,iBALA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAUAC,oBAVA,4BAUAX,gBAVA,EAUA;AACA;AACA,KAZA;AAaAY,aAbA,uBAaA;AACA;AACA,KAfA;AAmBAC,aAnBA,qBAmBAC,EAnBA,EAmBA;AAAA;;AACAP,YACAQ,MADA,CACA,2CADA,EAEAN,IAFA,CAEA;AACA;AACA,OAJA,EAKAC,KALA,CAKA;AAAA;AAAA,OALA;AAMA;AA1BA;AA7BA","names":["name","components","ListerInscrit","data","dismissSecs","dismissCountDown","formations","computed","watch","mounted","methods","getformations","axios","get","then","catch","countDownChanged","showAlert","deleteitm","id","delete"],"sourceRoot":"src/views/inscrit","sources":["InscritsView.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\"  class=\"container \">\r\n    <h1 class=\"text-center\">les participants</h1>\r\n    <b-alert\r\n      :show=\"dismissCountDown\"\r\n      dismissible\r\n      variant=\"info\"\r\n      @dismissed=\"dismissCountDown=0\"\r\n      @dismiss-count-down=\"countDownChanged\">\r\n    <h6 aria-describedby=\"help-block\"> le formation  est ajouter avec success a la fin de table</h6>\r\n      <b-form-text id=\"help-block\">This alert will dismiss after {{ dismissCountDown }} seconds...</b-form-text>\r\n      <b-progress\r\n        variant=\"info\"\r\n        :max=\"dismissSecs\"\r\n        :value=\"dismissCountDown\"\r\n        height=\"4px\"\r\n      ></b-progress>\r\n    </b-alert>\r\n\r\n  <div class=\"accordion\" role=\"tablist\">\r\n    <b-card no-body class=\"mb-1\"  v-for=\"formation in formations\" :key=\"formation.id\">\r\n      <b-card-header header-tag=\"header\" class=\"p-1\" role=\"tab\" v-if=\"formation.inscrits\">\r\n        <b-button  block  v-b-toggle :href=\"'#id'+formation.id\" @click.prevent>\r\n            <b-container class=\"bv-example-row\"  >\r\n  <b-row>\r\n    <b-col>{{formation.titre}}</b-col>\r\n    <b-col>{{formation.date_debut}}</b-col>\r\n  </b-row>\r\n</b-container>\r\n</b-button>\r\n      </b-card-header>\r\n      <b-collapse :id=\"'id'+formation.id\" v-if=\"formation.inscrits\"  accordion=\"my-accordion\" role=\"tabpanel\">\r\n        <b-card-body>\r\n          <lister-inscrit :inscrits=\"formation.inscrits\" />\r\n        </b-card-body>\r\n      </b-collapse>\r\n    </b-card>\r\n  </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport ListerInscrit from '../../components/inscrit/ListerInscrit.vue';\r\n\r\n//import ArchiverItem from \"@/components/ArchiverItem\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n  name: \"InscritsView\",\r\n  components: {\r\n    ListerInscrit\r\n    //  ArchiverItem,\r\n\r\n     \r\n\r\n  },\r\n  data: function () {\r\n    return {\r\n   \r\n dismissSecs: 10,\r\n        dismissCountDown: 0,\r\n\r\n     formations:[],\r\n   \r\n    };\r\n  },\r\n  computed:{\r\n\r\n  },\r\nwatch: {\r\n \r\n},\r\n \r\n  mounted() {\r\n    this.getformations();\r\n  },\r\n  methods: {\r\n    async getformations() {\r\n  \r\n await  axios\r\n        .get(\"http://127.0.0.1:8000/api/inscrits/formations\")\r\n        .then((response) => {\r\n          this.formations = response.data;\r\n        })\r\n        .catch((error) => console.log(error.response));\r\n    },\r\n     countDownChanged(dismissCountDown) {\r\n        this.dismissCountDown = dismissCountDown\r\n      },\r\n      showAlert() {\r\n        this.dismissCountDown = this.dismissSecs\r\n      },\r\n  \r\n  \r\n   \r\n    deleteitm(id) {\r\n      axios\r\n        .delete(\"http://127.0.0.1:8000/api/formation/\" + id)\r\n        .then((response) => {\r\n          if (response.data == true) this.getformations();\r\n        })\r\n        .catch((error) => console.log(error.response));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n@import \"~material-design-icons-iconfont/dist/material-design-icons\";\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}