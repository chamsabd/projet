{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.number.is-integer.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.slice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'tb-skeleton/dist/skeleton.css';\nimport Fuse from 'fuse.js';\nimport locales from './locales';\nimport { TbSkeleton } from 'tb-skeleton';\nexport default {\n  components: {\n    TbSkeleton: TbSkeleton\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    columns: {\n      type: Array,\n      required: true\n    },\n    rows: {\n      type: Array,\n      required: true\n    },\n    clickable: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    customButtons: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    },\n    perPage: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [10, 20, 30, 40, 50];\n      }\n    },\n    defaultPerPage: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    sortable: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    searchable: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    exactSearch: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    serverSearch: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    serverSearchFunc: {\n      type: Function,\n      required: false,\n      default: function _default() {}\n    },\n    paginate: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    exportable: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    printable: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    locale: {\n      type: String,\n      required: false,\n      default: 'en'\n    },\n    initSortCol: {\n      type: Number,\n      required: false,\n      default: -1\n    },\n    loadingAnimation: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      currentPage: 1,\n      currentPerPage: 10,\n      sortColumn: -1,\n      sortType: 'asc',\n      searching: false,\n      searchInput: ''\n    };\n  },\n  methods: {\n    nextPage: function nextPage() {\n      if (this.processedRows.length > this.currentPerPage * this.currentPage) ++this.currentPage;\n    },\n    previousPage: function previousPage() {\n      if (this.currentPage > 1) --this.currentPage;\n    },\n    onTableLength: function onTableLength(e) {\n      this.currentPerPage = parseInt(e.target.value);\n    },\n    sort: function sort(index) {\n      if (!this.sortable) return;\n\n      if (this.sortColumn === index) {\n        this.sortType = this.sortType === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortType = 'asc';\n        this.sortColumn = index;\n      }\n    },\n    search: function search(e) {\n      this.searching = !this.searching;\n    },\n    click: function click(row) {\n      if (!this.clickable) {\n        return;\n      }\n\n      if (getSelection().toString()) {\n        // Return if some text is selected instead of firing the row-click event.\n        return;\n      }\n\n      this.$emit('row-click', row);\n    },\n    exportExcel: function exportExcel() {\n      var mimeType = 'data:application/vnd.ms-excel';\n      var html = this.renderTable().replace(/ /g, '%20'); // eslint-disable-next-line eqeqeq\n\n      var documentPrefix = this.title != '' ? this.title.replace(/ /g, '-') : 'Sheet';\n      var d = new Date();\n      var dummy = document.createElement('a');\n      dummy.href = mimeType + ', ' + html;\n      dummy.download = documentPrefix + '-' + d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + '-' + d.getHours() + '-' + d.getMinutes() + '-' + d.getSeconds() + '.xls';\n      document.body.appendChild(dummy);\n      dummy.click();\n    },\n    print: function print() {\n      var clonedTable = this.$refs.table.cloneNode(true);\n      this.synchronizeCssStyles(this.$refs.table, clonedTable, true);\n      clonedTable.style.maxWidth = '100%';\n      clonedTable.style.boxShadow = '0px 0px 0px 1px rgba(0,0,0,0.2)';\n      clonedTable.style.margin = '8px auto';\n      clonedTable.querySelector('.actions').remove();\n      clonedTable.querySelector('.material-pagination').remove();\n      clonedTable.querySelector('.datatable-length').remove();\n      clonedTable.querySelectorAll('button').forEach(function (n) {\n        return n.remove();\n      });\n      var win = window.open('', '');\n      win.document.body.style.fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\n      win.document.body.innerHTML = clonedTable.outerHTML;\n      win.print();\n      win.close();\n    },\n    renderTable: function renderTable() {\n      var table = '<table><thead>';\n      table += '<tr>';\n\n      for (var i = 0; i < this.columns.length; i++) {\n        var column = this.columns[i];\n        table += '<th>';\n        table += column.label;\n        table += '</th>';\n      }\n\n      table += '</tr>';\n      table += '</thead><tbody>';\n\n      for (var _i = 0; _i < this.rows.length; _i++) {\n        var row = this.rows[_i];\n        table += '<tr>';\n\n        for (var j = 0; j < this.columns.length; j++) {\n          var _column = this.columns[j];\n          table += '<td>';\n          table += this.collect(row, _column.field);\n          table += '</td>';\n        }\n\n        table += '</tr>';\n      }\n\n      table += '</tbody></table>';\n      return table;\n    },\n    dig: function dig(obj, selector) {\n      var result = obj;\n      var splitter = selector.split('.');\n\n      for (var i = 0; i < splitter.length; i++) {\n        if (result == undefined) return undefined;\n        result = result[splitter[i]];\n      }\n\n      return result;\n    },\n    collect: function collect(obj, field) {\n      if (typeof field === 'function') return field(obj);else if (typeof field === 'string') return this.dig(obj, field);else return undefined;\n    },\n\n    /* https://codebottle.io/s/31b70f5391\n     *\n     * @author: Luigi D'Amico (www.8bitplatoon.com)\n     */\n    synchronizeCssStyles: function synchronizeCssStyles(src, destination, recursively) {\n      destination.style.cssText = this.getComputedStyleCssText(src);\n\n      if (recursively) {\n        var vSrcElements = src.getElementsByTagName('*');\n        var vDstElements = destination.getElementsByTagName('*');\n\n        for (var i = vSrcElements.length; i--;) {\n          var vSrcElement = vSrcElements[i];\n          var vDstElement = vDstElements[i];\n          vDstElement.style.cssText = this.getComputedStyleCssText(vSrcElement);\n        }\n      }\n    },\n    // https://gist.github.com/johnkpaul/1754808\n    //\n    // Please delete Firefox.\n    getComputedStyleCssText: function getComputedStyleCssText(element) {\n      var cssObject = window.getComputedStyle(element);\n      var cssAccumulator = [];\n\n      if (cssObject.cssText !== '') {\n        return cssObject.cssText;\n      }\n\n      for (var prop in cssObject) {\n        if (typeof cssObject[prop] === 'string') {\n          cssAccumulator.push(prop + ' : ' + cssObject[prop]);\n        }\n      }\n\n      return cssAccumulator.join('; ');\n    }\n  },\n  watch: {\n    perPageOptions: function perPageOptions(newOptions, oldOptions) {\n      // If defaultPerPage is provided and it's a valid option, set as current per page\n      if (newOptions.indexOf(this.defaultPerPage) > -1) {\n        this.currentPerPage = parseInt(this.defaultPerPage);\n      } else {\n        // Set current page to first value\n        this.currentPerPage = newOptions[0];\n      }\n    },\n    searchInput: function searchInput(newSearchInput) {\n      if (this.searching && this.serverSearch && this.serverSearchFunc) this.serverSearchFunc(newSearchInput);\n    },\n    rows: function rows(newRows, oldRows) {\n      // If the number of rows change, reset the currentPage to 1\n      if (newRows !== oldRows) this.currentPage = 1;\n    }\n  },\n  computed: {\n    perPageOptions: function perPageOptions() {\n      var options = Array.isArray(this.perPage) && this.perPage || [10, 20, 30, 40, 50]; // Force numbers\n\n      options = options.map(function (v) {\n        return parseInt(v);\n      }); // Sort options\n\n      options.sort(function (a, b) {\n        return a - b;\n      }); // And add \"All\"\n\n      options.push(-1);\n      return options;\n    },\n    processedRows: function processedRows() {\n      var _this = this;\n\n      var computedRows = this.rows;\n      if (this.sortable !== false) computedRows = computedRows.sort(function (x, y) {\n        if (!_this.columns[_this.sortColumn]) return 0;\n\n        var cook = function cook(x) {\n          x = _this.collect(x, _this.columns[_this.sortColumn].field);\n\n          if (typeof x === 'string') {\n            x = x.toLowerCase();\n            if (_this.columns[_this.sortColumn].numeric) x = x.indexOf('.') >= 0 ? parseFloat(x) : parseInt(x);\n          }\n\n          return x;\n        };\n\n        x = cook(x);\n        y = cook(y);\n        return (x < y ? -1 : x > y ? 1 : 0) * (_this.sortType === 'desc' ? -1 : 1);\n      });\n\n      if (this.searching && !this.serverSearch && this.searchInput) {\n        var searchConfig = {\n          keys: this.columns.map(function (c) {\n            return c.field;\n          })\n        }; // Enable searching of numbers (non-string)\n        // Temporary fix of https://github.com/krisk/Fuse/issues/144\n\n        searchConfig.getFn = function (obj, path) {\n          var property = _this.dig(obj, path);\n\n          if (Number.isInteger(property)) return JSON.stringify(property);\n          return property;\n        };\n\n        if (this.exactSearch) {\n          //return only exact matches\n          searchConfig.threshold = 0, searchConfig.distance = 0;\n        }\n\n        computedRows = new Fuse(computedRows, searchConfig).search(this.searchInput);\n      }\n\n      return computedRows;\n    },\n    paginated: function paginated() {\n      var paginatedRows = this.processedRows;\n      if (this.paginate && this.currentPerPage !== -1) paginatedRows = paginatedRows.slice((this.currentPage - 1) * this.currentPerPage, this.currentPerPage === -1 ? paginatedRows.length + 1 : this.currentPage * this.currentPerPage);\n      return paginatedRows;\n    },\n    lang: function lang() {\n      return this.locale in locales ? locales[this.locale] : locales['en'];\n    }\n  },\n  mounted: function mounted() {\n    if (!(this.locale in locales)) console.error(\"vue-materialize-datable: Invalid locale '\".concat(this.locale, \"'\"));\n    this.sortColumn = this.initSortCol;\n  }\n};","map":{"version":3,"mappings":"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mCAiKAC,OAjKA,EAiKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACAC;AACA;AACA;;AAEA;AACA;AAhLA,GA1HA;AA6SAC;AACAC,kBADA,0BACAC,UADA,EACAC,UADA,EACA;AACA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KATA;AAWArC,eAXA,uBAWAsC,cAXA,EAWA;AACA,wEACA;AACA,KAdA;AAgBA7D,QAhBA,gBAgBA8D,OAhBA,EAgBAC,OAhBA,EAgBA;AACA;AACA,+BACA;AACA;AApBA,GA7SA;AAoUAC;AACAN,kBADA,4BACA;AACA,wFADA,CAGA;;AACAO;AAAA;AAAA,SAJA,CAOA;;AACAA;AAAA;AAAA,SARA,CAUA;;AACAA;AAGA;AACA,KAhBA;AAkBAC,iBAlBA,2BAkBA;AAAA;;AACA;AAEA,mCACAC;AACA,8CACA;;AAEA;AACAC;;AACA;AACAA;AACA,yDACAA;AACA;;AACA;AACA,SARA;;AAUAA;AACAC;AAEA;AACA,OAlBA;;AAoBA;AACA;AAAAC;AAAA;AAAA;AAAA,UADA,CAGA;AACA;;AACAC;AACA;;AACA,0CACA;AACA;AACA,SALA;;AAOA;AACA;AACAA,sCACAA,yBADA;AAEA;;AAEAJ;AACA;;AAEA;AACA,KAhEA;AAkEAK,aAlEA,uBAkEA;AACA;AAEA,uDACAC,oCACA,4CADA,EAEA,8FAFA;AAKA;AACA,KA5EA;AA8EAC,QA9EA,kBA8EA;AACA;AACA;AAhFA,GApUA;AAuZAC,SAvZA,qBAuZA;AACA,mCACAC;AACA;AACA;AA3ZA","names":["components","TbSkeleton","props","title","type","required","columns","rows","clickable","default","customButtons","perPage","defaultPerPage","sortable","searchable","exactSearch","serverSearch","serverSearchFunc","paginate","exportable","printable","locale","initSortCol","loadingAnimation","data","currentPage","currentPerPage","sortColumn","sortType","searching","searchInput","methods","nextPage","previousPage","onTableLength","e","sort","index","search","click","row","exportExcel","dummy","d","document","print","clonedTable","win","renderTable","table","dig","obj","selector","result","collect","field","synchronizeCssStyles","src","destination","recursively","vDstElement","getComputedStyleCssText","element","cssAccumulator","watch","perPageOptions","newOptions","oldOptions","newSearchInput","newRows","oldRows","computed","options","processedRows","computedRows","x","y","keys","searchConfig","paginated","paginatedRows","lang","mounted","console"],"sourceRoot":"node_modules/vue-materialize-datatable/src","sources":["DataTable.vue"],"sourcesContent":["<template>\n\t<div class=\"card material-table\" ref=\"table\">\n\t\t<div class=\"table-header\">\n\t\t\t<span class=\"table-title\">{{ title }}</span>\n\t\t\t<div class=\"actions\">\n\t\t\t\t<a v-for=\"(button, index) in customButtons\" v-if=\"button.hide ? !button.hide : true\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\thref=\"javascript:undefined\"\n\t\t\t\t\tclass=\"waves-effect btn-flat nopadding\"\n\t\t\t\t\t@click=\"button.onclick\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"material-icons\">{{ button.icon }}</i>\n\t\t\t\t</a>\n\t\t\t\t<a v-if=\"printable\"\n\t\t\t\t\thref=\"javascript:undefined\"\n\t\t\t\t\tclass=\"waves-effect btn-flat nopadding\"\n\t\t\t\t\t@click=\"print\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"material-icons\">print</i>\n\t\t\t\t</a>\n\t\t\t\t<a v-if=\"exportable\"\n\t\t\t\t\thref=\"javascript:undefined\"\n\t\t\t\t\tclass=\"waves-effect btn-flat nopadding\"\n\t\t\t\t\t@click=\"exportExcel\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"material-icons\">description</i>\n\t\t\t\t</a>\n\t\t\t\t<a v-if=\"searchable\"\n\t\t\t\t\thref=\"javascript:undefined\"\n\t\t\t\t\tclass=\"waves-effect btn-flat nopadding\"\n\t\t\t\t\t@click=\"search\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"material-icons\">search</i>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t\t<div v-if=\"searching\">\n\t\t\t<div id=\"search-input-container\">\n\t\t\t\t<label>\n\t\t\t\t\t<input id=\"search-input\" type=\"search\" class=\"form-control\" :placeholder=\"lang['search_data']\"\n\t\t\t\t\t\tv-model=\"searchInput\"\n\t\t\t\t\t>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t\t<table ref=\"table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-for=\"(column, index) in columns\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t:class=\"(sortable ? 'sorting ' : '')\n\t\t\t\t\t\t\t+ (sortColumn === index ?\n\t\t\t\t\t\t\t\t(sortType === 'desc' ? 'sorting-desc' : 'sorting-asc')\n\t\t\t\t\t\t\t\t: '')\n\t\t\t\t\t\t\t+ (column.numeric ? ' numeric' : '')\"\n\t\t\t\t\t\t:style=\"{width: column.width ? column.width : 'auto'}\"\n\t\t\t\t\t\t@click=\"sort(index)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ column.label }}\n\t\t\t\t\t</th>\n\t\t\t\t\t<slot name=\"thead-tr\" />\n\t\t\t\t</tr>\n\t\t\t</thead>\n\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(row, index) in paginated\"\n\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t:class=\"{ clickable : clickable }\"\n\t\t\t\t\t@click=\"click(row)\"\n\t\t\t\t>\n\t\t\t\t\t<td v-for=\"(column, columnIndex) in columns\"\n\t\t\t\t\t\t:key=\"columnIndex\"\n\t\t\t\t\t\t:class=\"{ numeric : column.numeric }\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div v-if=\"!column.html\">\n\t\t\t\t\t\t\t{{ collect(row, column.field) }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-if=\"column.html\" v-html=\"collect(row, column.field)\" />\n\t\t\t\t\t</td>\n\t\t\t\t\t<slot name=\"tbody-tr\" :row=\"row\" />\n\t\t\t\t</tr>\n\n\t\t\t\t<template v-if=\"rows.length === 0 && loadingAnimation === true\">\n\t\t\t\t\t<tr v-for=\"n in (currentPerPage === -1 ? 10 : currentPerPage)\"\n\t\t\t\t\t\t:key=\"n\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<td :colspan=\"columns.length\">\n\t\t\t\t\t\t\t<tb-skeleton :height=\"15\" theme=\"opacity\" bg-color=\"#dcdbdc\" shape=\"radius\" />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</template>\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<div v-if=\"paginate\" class=\"table-footer\">\n\t\t\t<div :class=\"{'datatable-length': true, 'rtl': lang.__is_rtl}\">\n\t\t\t\t<label>\n\t\t\t\t\t<span>{{ lang['rows_per_page'] }}:</span>\n\t\t\t\t\t<select class=\"browser-default\" @change=\"onTableLength\">\n\t\t\t\t\t\t<option v-for=\"(option, index) in perPageOptions\"\n\t\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t\t:value=\"option\"\n\t\t\t\t\t\t\t:selected=\"option == currentPerPage\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ option === -1 ? lang['all'] : option }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div :class=\"{'datatable-info': true, 'rtl': lang.__is_rtl}\">\n\t\t\t\t<span>{{ (currentPage - 1) * currentPerPage ? (currentPage - 1) * currentPerPage : 1 }}\n\t\t\t\t\t-{{ Math.min(processedRows.length, currentPerPage * currentPage) }}\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t{{ lang['out_of_pages'] }}\n\t\t\t\t</span>\n\t\t\t\t<span>\n\t\t\t\t\t{{ processedRows.length }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ul class=\"material-pagination\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"javascript:undefined\"\n\t\t\t\t\t\t\tclass=\"waves-effect btn-flat\"\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t@click.prevent=\"previousPage\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class=\"material-icons\">chevron_left</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"javascript:undefined\"\n\t\t\t\t\t\t\tclass=\"waves-effect btn-flat\"\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t@click.prevent=\"nextPage\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<i class=\"material-icons\">chevron_right</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport 'tb-skeleton/dist/skeleton.css';\n\n\timport Fuse from 'fuse.js';\n\timport locales from './locales';\n\timport { TbSkeleton } from 'tb-skeleton';\n\n\texport default {\n\t\tcomponents: {\n\t\t\tTbSkeleton,\n\t\t},\n\n\t\tprops: {\n\t\t\ttitle: {\n\t\t\t\ttype: String,\n\t\t\t\trequired: true,\n\t\t\t},\n\n\t\t\tcolumns: {\n\t\t\t\ttype: Array,\n\t\t\t\trequired: true,\n\t\t\t},\n\n\t\t\trows: {\n\t\t\t\ttype: Array,\n\t\t\t\trequired: true,\n\t\t\t},\n\n\t\t\tclickable: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\tcustomButtons: {\n\t\t\t\ttype: Array,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: () => [],\n\t\t\t},\n\n\t\t\tperPage: {\n\t\t\t\ttype: Array,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: () => [10, 20, 30, 40, 50],\n\t\t\t},\n\n\t\t\tdefaultPerPage: {\n\t\t\t\ttype: Number,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: null,\n\t\t\t},\n\n\t\t\tsortable: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\tsearchable: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\texactSearch: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: false,\n\t\t\t},\n\n\t\t\tserverSearch: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: false,\n\t\t\t},\n\n\t\t\tserverSearchFunc: {\n\t\t\t\ttype: Function,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: () => {},\n\t\t\t},\n\n\t\t\tpaginate: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\texportable: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\tprintable: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t\tlocale: {\n\t\t\t\ttype: String,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: 'en',\n\t\t\t},\n\n\t\t\tinitSortCol: {\n\t\t\t\ttype: Number,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: -1,\n\t\t\t},\n\n\t\t\tloadingAnimation: {\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: false,\n\t\t\t\tdefault: true,\n\t\t\t},\n\n\t\t},\n\n\t\tdata: () => ({\n\t\t\tcurrentPage: 1,\n\t\t\tcurrentPerPage: 10,\n\t\t\tsortColumn: -1,\n\t\t\tsortType: 'asc',\n\t\t\tsearching: false,\n\t\t\tsearchInput: '',\n\t\t}),\n\n\t\tmethods: {\n\t\t\tnextPage() {\n\t\t\t\tif (this.processedRows.length > this.currentPerPage * this.currentPage)\n\t\t\t\t\t++this.currentPage;\n\t\t\t},\n\n\t\t\tpreviousPage() {\n\t\t\t\tif (this.currentPage > 1)\n\t\t\t\t\t--this.currentPage;\n\t\t\t},\n\n\t\t\tonTableLength(e) {\n\t\t\t\tthis.currentPerPage = parseInt(e.target.value);\n\t\t\t},\n\n\t\t\tsort(index) {\n\t\t\t\tif (!this.sortable)\n\t\t\t\t\treturn;\n\t\t\t\tif (this.sortColumn === index) {\n\t\t\t\t\tthis.sortType = this.sortType === 'asc' ? 'desc' : 'asc';\n\t\t\t\t} else {\n\t\t\t\t\tthis.sortType = 'asc';\n\t\t\t\t\tthis.sortColumn = index;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsearch(e) {\n\t\t\t\tthis.searching = !this.searching;\n\t\t\t},\n\n\t\t\tclick(row) {\n\t\t\t\tif(!this.clickable){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif(getSelection().toString()){\n\t\t\t\t\t// Return if some text is selected instead of firing the row-click event.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.$emit('row-click', row);\n\t\t\t},\n\n\t\t\texportExcel() {\n\t\t\t\tconst mimeType = 'data:application/vnd.ms-excel';\n\t\t\t\tconst html = this.renderTable().replace(/ /g, '%20');\n\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\tconst documentPrefix = this.title != '' ? this.title.replace(/ /g, '-') : 'Sheet';\n\t\t\t\tconst d = new Date();\n\n\t\t\t\tconst dummy = document.createElement('a');\n\t\t\t\tdummy.href = mimeType + ', ' + html;\n\t\t\t\tdummy.download = documentPrefix\n\t\t\t\t\t+ '-' + d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate()\n\t\t\t\t\t+ '-' + d.getHours() + '-' + d.getMinutes() + '-' + d.getSeconds()\n\t\t\t\t\t+ '.xls';\n\t\t\t\tdocument.body.appendChild(dummy);\n\t\t\t\tdummy.click();\n\t\t\t},\n\n\t\t\tprint() {\n\t\t\t\tconst clonedTable = this.$refs.table.cloneNode(true);\n\t\t\t\tthis.synchronizeCssStyles(this.$refs.table, clonedTable, true);\n\n\t\t\t\tclonedTable.style.maxWidth = '100%';\n\t\t\t\tclonedTable.style.boxShadow = '0px 0px 0px 1px rgba(0,0,0,0.2)';\n\t\t\t\tclonedTable.style.margin = '8px auto';\n\t\t\t\tclonedTable.querySelector('.actions').remove();\n\t\t\t\tclonedTable.querySelector('.material-pagination').remove();\n\t\t\t\tclonedTable.querySelector('.datatable-length').remove();\n\n\t\t\t\tclonedTable.querySelectorAll('button').forEach(n => n.remove());\n\n\t\t\t\tlet win = window.open('', '');\n\n\n\t\t\t\twin.document.body.style.fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif';\n\t\t\t\twin.document.body.innerHTML = (clonedTable.outerHTML);\n\n\t\t\t\twin.print();\n\n\t\t\t\twin.close();\n\t\t\t},\n\n\t\t\trenderTable() {\n\t\t\t\tlet table = '<table><thead>';\n\n\t\t\t\ttable += '<tr>';\n\t\t\t\tfor (let i = 0; i < this.columns.length; i++) {\n\t\t\t\t\tconst column = this.columns[i];\n\t\t\t\t\ttable += '<th>';\n\t\t\t\t\ttable += \tcolumn.label;\n\t\t\t\t\ttable += '</th>';\n\t\t\t\t}\n\t\t\t\ttable += '</tr>';\n\n\t\t\t\ttable += '</thead><tbody>';\n\n\t\t\t\tfor (let i = 0; i < this.rows.length; i++) {\n\t\t\t\t\tconst row = this.rows[i];\n\t\t\t\t\ttable += '<tr>';\n\t\t\t\t\tfor (let j = 0; j < this.columns.length; j++) {\n\t\t\t\t\t\tconst column = this.columns[j];\n\t\t\t\t\t\ttable += '<td>';\n\t\t\t\t\t\ttable +=\tthis.collect(row, column.field);\n\t\t\t\t\t\ttable += '</td>';\n\t\t\t\t\t}\n\t\t\t\t\ttable += '</tr>';\n\t\t\t\t}\n\n\t\t\t\ttable += '</tbody></table>';\n\n\t\t\t\treturn table;\n\t\t\t},\n\n\t\t\tdig(obj, selector) {\n\t\t\t\tlet result = obj;\n\t\t\t\tconst splitter = selector.split('.');\n\n\t\t\t\tfor (let i = 0; i < splitter.length; i++) {\n\t\t\t\t\tif (result == undefined)\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\tresult = result[splitter[i]];\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tcollect(obj, field) {\n\t\t\t\tif (typeof(field) === 'function')\n\t\t\t\t\treturn field(obj);\n\t\t\t\telse if (typeof(field) === 'string')\n\t\t\t\t\treturn this.dig(obj, field);\n\t\t\t\telse\n\t\t\t\t\treturn undefined;\n\t\t\t},\n\n\t\t\t/* https://codebottle.io/s/31b70f5391\n\t\t\t *\n\t\t\t * @author: Luigi D'Amico (www.8bitplatoon.com)\n\t\t\t */\n\t\t\tsynchronizeCssStyles(src, destination, recursively) {\n\t\t\t\tdestination.style.cssText = this.getComputedStyleCssText(src);\n\n\t\t\t\tif (recursively) {\n\t\t\t\t\tconst vSrcElements = src.getElementsByTagName('*');\n\t\t\t\t\tconst vDstElements = destination.getElementsByTagName('*');\n\n\t\t\t\t\tfor (var i = vSrcElements.length; i--;) {\n\t\t\t\t\t\tconst vSrcElement = vSrcElements[i];\n\t\t\t\t\t\tconst vDstElement = vDstElements[i];\n\t\t\t\t\t\tvDstElement.style.cssText = this.getComputedStyleCssText(vSrcElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// https://gist.github.com/johnkpaul/1754808\n\t\t\t//\n\t\t\t// Please delete Firefox.\n\t\t\tgetComputedStyleCssText(element) {\n\t\t\t\tconst cssObject = window.getComputedStyle(element);\n\t\t\t\tconst cssAccumulator = [];\n\n\t\t\t\tif (cssObject.cssText !== ''){\n\t\t\t\t\treturn cssObject.cssText;\n\t\t\t\t}\n\n\t\t\t\tfor (let prop in cssObject){\n\t\t\t\t\tif (typeof cssObject[prop] === 'string'){\n\t\t\t\t\t\tcssAccumulator.push(prop + ' : ' + cssObject[prop]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn cssAccumulator.join('; ');\n\t\t\t},\n\t\t},\n\n\t\twatch: {\n\t\t\tperPageOptions(newOptions, oldOptions) {\n\t\t\t\t// If defaultPerPage is provided and it's a valid option, set as current per page\n\t\t\t\tif (newOptions.indexOf(this.defaultPerPage) > -1) {\n\t\t\t\t\tthis.currentPerPage = parseInt(this.defaultPerPage);\n\t\t\t\t} else {\n\t\t\t\t\t// Set current page to first value\n\t\t\t\t\tthis.currentPerPage = newOptions[0];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tsearchInput(newSearchInput) {\n\t\t\t\tif (this.searching && this.serverSearch && this.serverSearchFunc)\n\t\t\t\t\tthis.serverSearchFunc(newSearchInput);\n\t\t\t},\n\n\t\t\trows(newRows, oldRows) {\n\t\t\t\t// If the number of rows change, reset the currentPage to 1\n\t\t\t\tif(newRows !== oldRows)\n\t\t\t\t\tthis.currentPage = 1;\n\t\t\t},\n\t\t},\n\n\t\tcomputed: {\n\t\t\tperPageOptions() {\n\t\t\t\tlet options = (Array.isArray(this.perPage) && this.perPage) || [10, 20, 30, 40, 50];\n\n\t\t\t\t// Force numbers\n\t\t\t\toptions = options.map(v => parseInt(v));\n\n\n\t\t\t\t// Sort options\n\t\t\t\toptions.sort((a,b) => a - b);\n\n\t\t\t\t// And add \"All\"\n\t\t\t\toptions.push(-1);\n\n\n\t\t\t\treturn options;\n\t\t\t},\n\n\t\t\tprocessedRows() {\n\t\t\t\tlet computedRows = this.rows;\n\n\t\t\t\tif (this.sortable !== false)\n\t\t\t\t\tcomputedRows = computedRows.sort((x,y) => {\n\t\t\t\t\t\tif (!this.columns[this.sortColumn])\n\t\t\t\t\t\t\treturn 0;\n\n\t\t\t\t\t\tconst cook = x => {\n\t\t\t\t\t\t\tx = this.collect(x, this.columns[this.sortColumn].field);\n\t\t\t\t\t\t\tif (typeof(x) === 'string') {\n\t\t\t\t\t\t\t\tx = x.toLowerCase();\n\t\t\t\t\t\t\t\tif (this.columns[this.sortColumn].numeric)\n\t\t\t\t\t\t\t\t\tx = x.indexOf('.') >= 0 ? parseFloat(x) : parseInt(x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn x;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tx = cook(x);\n\t\t\t\t\t\ty = cook(y);\n\n\t\t\t\t\t\treturn (x < y ? -1 : (x > y ? 1 : 0)) * (this.sortType === 'desc' ? -1 : 1);\n\t\t\t\t\t});\n\n\t\t\t\tif (this.searching && !this.serverSearch && this.searchInput) {\n\t\t\t\t\tconst searchConfig = { keys: this.columns.map(c => c.field) };\n\n\t\t\t\t\t// Enable searching of numbers (non-string)\n\t\t\t\t\t// Temporary fix of https://github.com/krisk/Fuse/issues/144\n\t\t\t\t\tsearchConfig.getFn = (obj, path) => {\n\t\t\t\t\t\tconst property = this.dig(obj, path);\n\t\t\t\t\t\tif(Number.isInteger(property))\n\t\t\t\t\t\t\treturn JSON.stringify(property);\n\t\t\t\t\t\treturn property;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (this.exactSearch) {\n\t\t\t\t\t\t//return only exact matches\n\t\t\t\t\t\tsearchConfig.threshold = 0,\n\t\t\t\t\t\tsearchConfig.distance = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tcomputedRows = (new Fuse(computedRows, searchConfig)).search(this.searchInput);\n\t\t\t\t}\n\n\t\t\t\treturn computedRows;\n\t\t\t},\n\n\t\t\tpaginated() {\n\t\t\t\tlet paginatedRows = this.processedRows;\n\n\t\t\t\tif (this.paginate && this.currentPerPage !== -1)\n\t\t\t\t\tpaginatedRows = paginatedRows.slice(\n\t\t\t\t\t\t(this.currentPage - 1) * this.currentPerPage,\n\t\t\t\t\t\tthis.currentPerPage === -1 ? paginatedRows.length + 1 : this.currentPage * this.currentPerPage\n\t\t\t\t\t);\n\n\t\t\t\treturn paginatedRows;\n\t\t\t},\n\n\t\t\tlang() {\n\t\t\t\treturn this.locale in locales ? locales[this.locale] : locales['en'];\n\t\t\t},\n\t\t},\n\n\t\tmounted() {\n\t\t\tif (!(this.locale in locales))\n\t\t\t\tconsole.error(`vue-materialize-datable: Invalid locale '${this.locale}'`);\n\t\t\tthis.sortColumn = this.initSortCol;\n\t\t},\n\t};\n</script>\n\n<style scoped>\n\tdiv.material-table {\n\t\tpadding: 0;\n\t}\n\n\ttr.clickable {\n\t\tcursor: pointer;\n\t}\n\n\t#search-input {\n\t\tmargin: 0;\n\t\tborder: transparent 0 !important;\n\t\theight: 48px;\n\t\tcolor: rgba(0, 0, 0, .84);\n\t}\n\n\t#search-input-container {\n\t\tpadding: 0 14px 0 24px;\n\t\tborder-bottom: solid 1px #DDDDDD;\n\t}\n\n\ttable {\n\t\ttable-layout: fixed;\n\t}\n\n\t.table-header {\n\t\theight: 64px;\n\t\tpadding-left: 24px;\n\t\tpadding-right: 14px;\n\t\t-webkit-align-items: center;\n\t\t-ms-flex-align: center;\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\t-webkit-display: flex;\n\t\tborder-bottom: solid 1px #DDDDDD;\n\t}\n\n\t.table-header .actions {\n\t\tdisplay: -webkit-flex;\n\t\tmargin-left: auto;\n\t}\n\n\t.table-header .btn-flat {\n\t\t\tmin-width: 36px;\n\t\t\tpadding: 0 8px;\n\t}\n\n\t.table-header input {\n\t\tmargin: 0;\n\t\theight: auto;\n\t}\n\n\t.table-header i {\n\t\tcolor: rgba(0, 0, 0, 0.54);\n\t\tfont-size: 24px;\n\t}\n\n\t.table-footer {\n\t\theight: 56px;\n\t\tpadding-left: 24px;\n\t\tpadding-right: 14px;\n\t\tdisplay: -webkit-flex;\n\t\tdisplay: flex;\n\t\t-webkit-flex-direction: row;\n\t\tflex-direction: row;\n\t\t-webkit-justify-content: flex-end;\n\t\tjustify-content: flex-end;\n\t\t-webkit-align-items: center;\n\t\talign-items: center;\n\t\tfont-size: 12px !important;\n\t\tcolor: rgba(0, 0, 0, 0.54);\n\t}\n\n\t.table-footer .datatable-length {\n\t\tdisplay: -webkit-flex;\n\t\tdisplay: flex;\n\t}\n\n\t.table-footer .datatable-length select {\n\t\toutline: none;\n\t}\n\n\t.table-footer label {\n\t\tfont-size: 12px;\n\t\tcolor: rgba(0, 0, 0, 0.54);\n\t\tdisplay: -webkit-flex;\n\t\tdisplay: flex;\n\t\t-webkit-flex-direction: row;\n\t\t/* works with row or column */\n\n\t\tflex-direction: row;\n\t\t-webkit-align-items: center;\n\t\talign-items: center;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t}\n\n\t.table-footer .select-wrapper {\n\t\tdisplay: -webkit-flex;\n\t\tdisplay: flex;\n\t\t-webkit-flex-direction: row;\n\t\t/* works with row or column */\n\n\t\tflex-direction: row;\n\t\t-webkit-align-items: center;\n\t\talign-items: center;\n\t\t-webkit-justify-content: center;\n\t\tjustify-content: center;\n\t}\n\n\t.table-footer .datatable-info,\n\t.table-footer .datatable-length {\n\t\tmargin-right: 32px;\n\t}\n\n\t.table-footer .material-pagination {\n\t\tdisplay: flex;\n\t\t-webkit-display: flex;\n\t\tmargin: 0;\n\t}\n\n\t.table-footer .material-pagination li a {\n\t\tcolor: rgba(0, 0, 0, 0.54);\n\t\tpadding: 0 8px;\n\t\tfont-size: 24px;\n\t}\n\n\t.table-footer .select-wrapper input.select-dropdown {\n\t\tmargin: 0;\n\t\tborder-bottom: none;\n\t\theight: auto;\n\t\tline-height: normal;\n\t\tfont-size: 12px;\n\t\twidth: 40px;\n\t\ttext-align: right;\n\t}\n\n\t.table-footer select {\n\t\tbackground-color: transparent;\n\t\twidth: auto;\n\t\tpadding: 0;\n\t\tborder: 0;\n\t\tborder-radius: 0;\n\t\theight: auto;\n\t\tmargin-left: 20px;\n\t}\n\n\t.table-title {\n\t\tfont-size: 20px;\n\t\tcolor: #000;\n\t}\n\n\ttable tr td {\n\t\tpadding: 0 0 0 56px;\n\t\theight: 48px;\n\t\tfont-size: 13px;\n\t\tcolor: rgba(0, 0, 0, 0.87);\n\t\tborder-bottom: solid 1px #DDDDDD;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\ttable td, table th {\n\t\tborder-radius: 0;\n\t}\n\n\ttable tr td a {\n\t\tcolor: inherit;\n\t}\n\n\ttable tr td a i {\n\t\tfont-size: 18px;\n\t\tcolor: rgba(0, 0, 0, 0.54);\n\t}\n\n\ttable tr {\n\t\tfont-size: 12px;\n\t}\n\n\ttable th {\n\t\tfont-size: 12px;\n\t\tfont-weight: 500;\n\t\tcolor: #757575;\n\t\tcursor: pointer;\n\t\twhite-space: nowrap;\n\t\tpadding: 0;\n\t\theight: 56px;\n\t\tpadding-left: 56px;\n\t\tvertical-align: middle;\n\t\toutline: none !important;\n\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\ttable th:hover {\n\t\toverflow: visible;\n\t\ttext-overflow: initial;\n\t}\n\n\ttable th.sorting-asc,\n\ttable th.sorting-desc {\n\t\tcolor: rgba(0, 0, 0, 0.87);\n\t}\n\n\ttable th.sorting:after,\n\ttable th.sorting-asc:after {\n\t\tfont-family: 'Material Icons';\n\t\tfont-weight: normal;\n\t\tfont-style: normal;\n\t\tfont-size: 16px;\n\t\tline-height: 1;\n\t\tletter-spacing: normal;\n\t\ttext-transform: none;\n\t\tdisplay: inline-block;\n\t\tword-wrap: normal;\n\t\t-webkit-font-feature-settings: 'liga';\n\t\t-webkit-font-smoothing: antialiased;\n\t\tcontent: \"arrow_back\";\n\t\t-webkit-transform: rotate(90deg);\n\t\tdisplay: none;\n\t\tvertical-align: middle;\n\t}\n\n\ttable th.sorting:hover:after,\n\ttable th.sorting-asc:after,\n\ttable th.sorting-desc:after {\n\t\tdisplay: inline-block;\n\t}\n\n\ttable th.sorting-desc:after {\n\t\tcontent: \"arrow_forward\";\n\t}\n\n\ttable tbody tr:hover {\n\t\tbackground-color: #EEE;\n\t}\n\n\ttable th:last-child,\n\ttable td:last-child {\n\t\tpadding-right: 14px;\n\t}\n\n\ttable th:first-child, table td:first-child {\n\t\tpadding-left: 24px;\n\t}\n\n\t.rtl {\n\t\tdirection: rtl;\n\t}\n</style>\n"]},"metadata":{},"sourceType":"module"}